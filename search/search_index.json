{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":"<p>Shortcuts for Chrome is a customizable browser navigation menu. </p> <p>It contains links to all Chrome browser pages (\"Chrome URLs\"), which are otherwise hard to find.  You can pin and sort your favorite URLs to suit your individual preferences.</p>"},{"location":"#installation","title":"Installation","text":"<p>This website contains documentation for this Chrome extension.  Extension source code is open source, under MIT license, and available on Github \u2197.</p> <p>Star Fork Watch Download Issue</p> <p></p>"},{"location":"api/","title":"Source docs","text":""},{"location":"api/#classes","title":"Classes","text":"Background <p>This module sets up all functionality and event handlers in the background context of the extension. Currently, this module sets up extension context menu. Instantiate background to activate this functionality.</p> Dragging <p>Makes child nodes of some DOM element draggable, using native HTML drag and drop.</p> Menu <p>Menu panel is a DOM elements that shows a list of links. This menu panel is drawn dynamically by creating all menu elements programmatically on <code>render()</code>. The parent instantiating the menu will call render. Parent must then add the returned menu to DOM tree to display it to user.</p> Popup <p>This is the main class for the popup window that shows when user clicks extension icon. This class is responsible for:</p> <ol> <li>saving/restoring persistent data and</li> <li>rendering the menu panel.</li> </ol> <p>This popup view can easily be extended to display other content, but currently it renders the menu panel only.</p> <p></p>"},{"location":"api/#background","title":"Background","text":"<p>This module sets up all functionality and event handlers in the background context of the extension. Currently, this module sets up extension context menu. Instantiate background to activate this functionality.</p> <p>Kind: global class </p>"},{"location":"api/#new-background","title":"new Background()","text":"<p>Initialize background scripts.</p> <p>Example Initialize background<pre><code>new Background();\n</code></pre> </p>"},{"location":"api/#dragging","title":"Dragging","text":"<p>Makes child nodes of some DOM element draggable, using native HTML drag and drop.</p> <p>Kind: global class </p>"},{"location":"api/#new-draggingidattribute-container-onelementrender-ondragendcallback","title":"new Dragging(idAttribute, container, onElementRender, onDragEndCallback)","text":"<p>Create a new draggable.</p> Param Type Description idAttribute <code>string</code> For each draggable element, this attribute will provide its id, for example <code>id</code> when element is expected to have such attribute e.g. <code>&lt;span id='label-1'&gt;example&lt;/span&gt;</code>. container <code>Element</code> The first parent of all draggable elements -&gt; provide a DOM element reference. onElementRender <code>function</code> After drag events have been attached, other remaining action handlers still need to be attached. This callback function will allow initiator to bind additional events to draggable elements. onDragEndCallback <code>function</code> After drag is done, this callback function notifies initiator that the item order within the draggable area has changed. <p>Example Creating a new draggable<pre><code>new Draggable(\n\"id\",\ncontainerElement,\nonElementRender(element: Element) { ... },\nonDragEndCallback(ids: Array&lt;String&gt;) { ... }\n);\n</code></pre> </p>"},{"location":"api/#menu","title":"Menu","text":"<p>Menu panel is a DOM elements that shows a list of links. This menu panel is drawn dynamically by creating all menu elements programmatically on <code>render()</code>. The parent instantiating the menu will call render. Parent must then add the returned menu to DOM tree to display it to user.</p> <p>Kind: global class  </p> <ul> <li>Menu<ul> <li>new Menu(getLinks, onPinToggle, onPinOrderChange, getRecent)</li> <li>.name \u21d2 <code>string</code></li> <li>.idAttr \u21d2 <code>string</code></li> <li>.render() \u21d2 <code>Element</code></li> </ul> </li> </ul> <p></p>"},{"location":"api/#new-menugetlinks-onpintoggle-onpinorderchange-getrecent","title":"new Menu(getLinks, onPinToggle, onPinOrderChange, getRecent)","text":"<p>Create a menu of navigation links.</p> <p>Returns: <code>Object</code> - Menu panel reference.  </p> Param Type Description getLinks <code>function</code> Function that returns all links. onPinToggle <code>function</code> Callback function for when link is pinned/unpinned. onPinOrderChange <code>function</code> Callback function for when links are re-ordered. getRecent <code>function</code> Function that returns list of recent links. <p>Example Create menu of links<pre><code>const menu = new Menu(getLinks, onPinToggle, onPinOrderChange, getRecent);\n</code></pre> </p>"},{"location":"api/#menuname-string","title":"Menu.name \u21d2 <code>string</code>","text":"<p>Name of this menu view.</p> <p>Kind: static property of <code>Menu</code> </p>"},{"location":"api/#menuidattr-string","title":"Menu.idAttr \u21d2 <code>string</code>","text":"<p>DOM attribute for getting the unique id of a link.</p> <p>Kind: static property of <code>Menu</code> </p>"},{"location":"api/#menurender-element","title":"Menu.render() \u21d2 <code>Element</code>","text":"<p>Programmatically draws the menu panel and its links.</p> <p>Kind: static method of <code>Menu</code> Returns: <code>Element</code> - DOM element representing the menu. Access: public Example Render menu<pre><code>// render the menu, then append to document body\nbody.append(menu.render());\n</code></pre> </p>"},{"location":"api/#popup","title":"Popup","text":"<p>This is the main class for the popup window that shows when user clicks extension icon. This class is responsible for:</p> <ol> <li>saving/restoring persistent data and</li> <li>rendering the menu panel.</li> </ol> <p>This popup view can easily be extended to display other content, but currently it renders the menu panel only.</p> <p>Kind: global class </p>"},{"location":"api/#new-popup","title":"new Popup()","text":"<p>Create a popup</p> <p>Example Create popup<pre><code>new Popup()\n</code></pre> </p>"},{"location":"api/#contextmenu","title":".ContextMenu","text":"<p>This module adds custom options to Chrome browser action context menu</p> <p>Kind: static class See:  chrome.contextMenus API</p> <p>Info</p> <p>This feature requires <code>contextMenus</code> permission in extension manifest.  </p> <ul> <li>.ContextMenu<ul> <li>.initialize()</li> <li>.generateOption(key, value)</li> <li>.generateUrl(option)</li> <li>.contextMenuOnClick(info)</li> </ul> </li> </ul> <p></p>"},{"location":"api/#contextmenuinitialize","title":"ContextMenu.initialize()","text":"<p>Initialize extension context menu</p> <p>Kind: static method of <code>ContextMenu</code> Example <pre><code>ContextMenu.initialize();\n</code></pre> </p>"},{"location":"api/#contextmenugenerateoptionkey-value","title":"ContextMenu.generateOption(key, value)","text":"<p>Make context menu option.</p> <p>Kind: static method of <code>ContextMenu</code> </p> Param Type Description key <code>string</code> Option key/id. value <code>Object</code> value.title <code>string</code> Option title. value.id <code>string</code> | <code>number</code> Option id. value.parentId <code>string</code> | <code>number</code> Option parent id. <p></p>"},{"location":"api/#contextmenugenerateurloption","title":"ContextMenu.generateUrl(option)","text":"<p>Generates an absolute url for a menu option.</p> <p>Kind: static method of <code>ContextMenu</code> </p> Param Type Description option <code>Object</code> option.url <code>string</code> URL of context menu link. <p></p>"},{"location":"api/#contextmenucontextmenuonclickinfo","title":"ContextMenu.contextMenuOnClick(info)","text":"<p>Handles context menu option click.</p> <p>Kind: static method of <code>ContextMenu</code> See</p> <ul> <li> onClicked</li> <li> OnClickData</li> </ul> Param Type Description info <code>Object</code> info.menuItemId <code>string</code> | <code>number</code> The ID of the menu item that was clicked. <p></p>"},{"location":"api/#helpers","title":".Helpers","text":"<p>This module contains various, static menu panel helper methods.</p> <p>Kind: static class  </p> <ul> <li>.Helpers<ul> <li>.unpinnedItemIcon \u21d2 <code>string</code></li> <li>.pinnedItemIcon \u21d2 <code>string</code></li> <li>.generateIcon(icon, className) \u21d2 <code>string</code></li> <li>.localizedSort(linkList) \u21d2 <code>Array.&lt;Array.&lt;String&gt;&gt;</code></li> <li>.translateLabel(name) \u21d2 <code>string</code></li> <li>.appendDivider(panel)</li> </ul> </li> </ul> <p></p>"},{"location":"api/#helpersunpinneditemicon-string","title":"Helpers.unpinnedItemIcon \u21d2 <code>string</code>","text":"<p>Generate SVG icon for unpinned link.</p> <p>Kind: static property of <code>Helpers</code> Returns: <code>string</code> - Icon element as HTML. </p>"},{"location":"api/#helperspinneditemicon-string","title":"Helpers.pinnedItemIcon \u21d2 <code>string</code>","text":"<p>Generate SVG icon for pinned link.</p> <p>Kind: static property of <code>Helpers</code> Returns: <code>string</code> - Icon element as HTML. </p>"},{"location":"api/#helpersgenerateiconicon-classname-string","title":"Helpers.generateIcon(icon, className) \u21d2 <code>string</code>","text":"<p>Given an icon name, this function returns SVG element.</p> <p>Kind: static method of <code>Helpers</code> Returns: <code>string</code> - Icon element as HTML string.  </p> Param Type Description icon <code>SVGIcons</code> One of className <code>string</code> Element class. <p></p>"},{"location":"api/#helperslocalizedsortlinklist-arrayarraystring","title":"Helpers.localizedSort(linkList) \u21d2 <code>Array.&lt;Array.&lt;String&gt;&gt;</code>","text":"<p>Sort a list of links by their localized label.</p> <p>Kind: static method of <code>Helpers</code> Returns: <code>Array.&lt;Array.&lt;String&gt;&gt;</code> - Sorted list of tuples, where</p> <ul> <li>first element is localized label</li> <li>second element is the original link  </li> </ul> Param Type Description linkList <code>Array.&lt;string&gt;</code> List of links. <p></p>"},{"location":"api/#helperstranslatelabelname-string","title":"Helpers.translateLabel(name) \u21d2 <code>string</code>","text":"<p>Get the translated dictionary value for some link.</p> <p>Kind: static method of <code>Helpers</code> Returns: <code>string</code> - Translated label.  </p> Param Type Description name <code>string</code> Link name (dictionary key). <p></p>"},{"location":"api/#helpersappenddividerpanel","title":"Helpers.appendDivider(panel)","text":"<p>Create a horizontal menu divider element and append it to the end of the provided panel element (in place). This method returns nothing. After calling this method panel will have a divider as its last DOM child.</p> <p>Kind: static method of <code>Helpers</code> </p> Param Type Description panel <code>Element</code> DOM element where to append the divider. <p></p>"},{"location":"api/#recentlinks","title":".RecentLinks","text":"<p>Recent links is a list of URL that were used recently (based on config). They become stale after some time and then get removed from the recent list.</p> <p>Kind: static class  </p> <ul> <li>.RecentLinks<ul> <li>.isStillRecent(timestamp) \u21d2 <code>boolean</code></li> <li>.addRecent(url, callback)</li> <li>.getRecent(callback)</li> </ul> </li> </ul> <p></p>"},{"location":"api/#recentlinksisstillrecenttimestamp-boolean","title":"RecentLinks.isStillRecent(timestamp) \u21d2 <code>boolean</code>","text":"<p>Determine if some timestamp still qualifies as \"recent\".</p> <p>Kind: static method of <code>RecentLinks</code> Returns: <code>boolean</code> - True if link is still valid relative to current time.  </p> Param Type Description timestamp <code>number</code> Milliseconds since epoch when link was last accessed. <p>Example Check if recent<pre><code>const timestamp = Date.now(); // capture timestamp\n// ... a few minutes later:\nconsole.log(RecentLinks.isStillRecent(timestamp));\n</code></pre> </p>"},{"location":"api/#recentlinksaddrecenturl-callback","title":"RecentLinks.addRecent(url, callback)","text":"<p>Mark some URL as recently used. Will either add or update the link, depending on if it already exists as a recently used link.</p> <p>Kind: static method of <code>RecentLinks</code> </p> Param Type Description url <code>string</code> Link URL. callback <code>function</code> Handler for when function is done. <p></p>"},{"location":"api/#recentlinksgetrecentcallback","title":"RecentLinks.getRecent(callback)","text":"<p>Get all recent items; note that this methods returns everything that is \"not-stale\". It doesn't check if link is pinned or not. That should be done at display time.</p> <p>Kind: static method of <code>RecentLinks</code> </p> Param Type Description callback <code>function</code> Result handler <p></p>"},{"location":"api/#storage","title":".Storage","text":"<p>Application storage for persisting data. Persisted data includes:</p> <ol> <li>pinned links (user preference)</li> <li>recently used links (based on user behavior).</li> </ol> <p>This storage is stored in chrome sync storage, which is specific to current user, and will sync between devices if user is signed in and sync is enabled.</p> <p>Kind: static class See:  Chrome storage</p> <p>Info</p> <p>This feature requires <code>storage</code> permission in extension manifest.  </p> <ul> <li>.Storage<ul> <li>.keys \u21d2 <code>Object</code></li> <li>.get(keys, callback)</li> <li>.save(key, value, callback)</li> </ul> </li> </ul> <p></p>"},{"location":"api/#storagekeys-object","title":"Storage.keys \u21d2 <code>Object</code>","text":"<p>List of storage keys. Only these keys can be stored in this storage.</p> <p>Kind: static enum of <code>Storage</code> </p>"},{"location":"api/#storagegetkeys-callback","title":"Storage.get(keys, callback)","text":"<p>Get some property from storage.</p> <p>Kind: static method of <code>Storage</code> </p> Param Type Description keys <code>string</code> | <code>Array.&lt;string&gt;</code> | <code>Object</code> Must be one of: A single key to get, list of keys to get, or a dictionary specifying default values (see description of the object). An empty list or object will return an empty result object. Pass in null to get the entire contents of storage. callback <code>function</code> Function to call with result. <p>Example Get values from storage<pre><code>Storage.get([Storage.keys.recent], items =&gt; {\n// do something with items\n});\n</code></pre> </p>"},{"location":"api/#storagesavekey-value-callback","title":"Storage.save(key, value, callback)","text":"<p>Save some property in storage.</p> <p>Kind: static method of <code>Storage</code> </p> Param Type Description key <code>string</code> One of  keys. value <code>*</code> Value to save. callback <code>function</code> Called after save operation has completed. <p>Example Save value to storage<pre><code>Storage.save(Storage.keys.recent, recentObj, callback);\n</code></pre> </p>"},{"location":"api/#config-object","title":".Config : <code>Object</code>","text":"<p>Application configurations.</p> <p>Kind: static constant Read only: true  </p> <ul> <li>.Config : <code>Object</code><ul> <li>.SVGIcons : <code>enum</code></li> <li>.ContextMenuOptions : <code>enum</code></li> <li>.recentIntervalMillis : <code>number</code></li> </ul> </li> </ul> <p></p>"},{"location":"api/#configsvgicons-enum","title":"Config.SVGIcons : <code>enum</code>","text":"<p>App icons svg paths.</p> <p>Kind: static enum of <code>Config</code> </p>"},{"location":"api/#configcontextmenuoptions-enum","title":"Config.ContextMenuOptions : <code>enum</code>","text":"<p>List of options to display in the context menu. Links will open in new tab when width/height (ww/wh) are not specified. Otherwise, links will open in a window of specified size.</p> <p>Kind: static enum of <code>Config</code> </p>"},{"location":"api/#configrecentintervalmillis-number","title":"Config.recentIntervalMillis : <code>number</code>","text":"<p>When a link clicked within last X milliseconds, it is considered \"recently used\".</p> <p>Kind: static constant of <code>Config</code> </p>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file. </p>"},{"location":"changelog/#360-2021-11-21","title":"3.6.0 (2021-11-21)","text":"<ul> <li>Update Japanese translation in 33</li> <li>Open links in the foreground in 36</li> <li>Migrate to mv3 in 37</li> <li>Update recent links in foreground in 38</li> <li>Update dev dependencies in 30, 32</li> </ul>"},{"location":"changelog/#351-2021-10-08","title":"3.5.1 (2021-10-08)","text":"<ul> <li>i18n in 24</li> <li>update manifest in 25</li> <li>update context menu in 28</li> </ul>"},{"location":"changelog/#350-2021-08-21","title":"3.5.0 (2021-08-21)","text":"<ul> <li>added translations for all Chrome locales changeset</li> </ul>"},{"location":"changelog/#341-2021-08-08","title":"3.4.1 (2021-08-08)","text":"<ul> <li>added translations for 8 more languages (ca, cs, de, el, es, it, ru, sv)</li> </ul>"},{"location":"changelog/#340-2021-07-19","title":"3.4.0 (2021-07-19)","text":"<ul> <li>migrate to manifest v3 PR #12</li> <li>change font size to better match native chrome size PR #11</li> <li>pinned icon alignment is off PR #10</li> <li>update icon PR #9</li> </ul>"},{"location":"changelog/#330-2021-02-24","title":"3.3.0 (2021-02-24)","text":"<ul> <li>add recent links</li> </ul>"},{"location":"changelog/#322-2021-01-09","title":"3.2.2 (2021-01-09)","text":"<ul> <li>add more share options (3ccbc63)</li> <li>add v3 manifest (e48df73)</li> <li>locales (55a97b6)</li> <li>adjust dark color scheme (183d6aa)</li> </ul>"},{"location":"changelog/#320-2020-12-15","title":"3.2.0 (2020-12-15)","text":"<ul> <li>Add translations</li> <li>Add dark mode support</li> </ul>"},{"location":"changelog/#311-2020-12-06","title":"3.1.1 (2020-12-06)","text":""},{"location":"changelog/#310-2020-12-06","title":"3.1.0 (2020-12-06)","text":"<ul> <li>migrate storage to use chrome sync storage over local (b898df7)</li> <li>lint (57fcef6)</li> <li>link: fix typo (eea986b)</li> <li>test: change unit test to sync storage (41fcfed)</li> <li>add pinned item min width; update storage module (39dc352)</li> </ul>"},{"location":"changelog/#301-2020-10-15","title":"3.0.1 (2020-10-15)","text":"<ul> <li>update menu links (5796bb3)</li> </ul>"},{"location":"changelog/#300-2020-10-11","title":"3.0.0 (2020-10-11)","text":"<ul> <li>change name</li> <li>update context menu links (d873e8a)</li> </ul>"},{"location":"dev_guide/","title":"System description","text":"<p>This extension has a popup window, which is visible to user, and the primary way of interacting with the extension, and a background context (service worker), that manages extension background services.</p> <p>When user clicks extension icon/browser action, extension opens the extension popup window.  Clicking a menu link opens a new browser tab. User can pin and unpin menu items, and sort pinned  menu items using drag and drop.</p> <p>This behavior is implemented by following 3 components:</p> <ol> <li> <p><code>src/popup</code> manages the extension popup window.</p> <ul> <li>It saves and restores user preferences </li> <li>It sets the visible content rendering inside the popup window</li> <li>Menu is currently the only possible view, so popup always renders the menu panel   </li> </ul> </li> <li> <p><code>src/menu</code> panel shows list of links.</p> <ul> <li>User can pin/unpin links and drag and drop pinned links</li> <li>It programmatically launches links on click</li> <li>It initiates capturing recently used links  </li> </ul> </li> <li> <p><code>src/background</code> has no visual interface, it runs in the background of the browser.</p> <ul> <li>It creates and manages extension context menu.</li> </ul> </li> </ol> <p>This application has no external runtime dependencies.</p>"},{"location":"organization/","title":"Code organization","text":"Path Description \u2514\u2500 .github workflows \u2514\u2500 assets extension images and features images \u2514\u2500 docs files used for generating this website \u2514\u2500 i18n generated translations (do not edit) \u2514\u2500 src source code \u2514\u2500 background background scripts \u2514\u2500 menu menu of links \u2514\u2500 popup extension popup view \u2514\u2500 shared shared classes and modules manifest.json extension manifest \u2514\u2500 test unit tests / (root) config and utility files"},{"location":"privacy/","title":"Privacy","text":"<p>This is a privacy policy regarding software applications developed by Mobile First LLC (the \"developer\"). This policy is applies to Shortcuts for Chrome (the \"app\") that was used to link to this policy. This policy also applies to people installing and using an application (the \"user\").</p>"},{"location":"privacy/#user-accounts","title":"User Accounts","text":"<p>Application does not require users to create login credentials nor to provide any personal information about themselves. If the app persists any data, such as user preferences, that data is stored on device only. Once app is deleted, all application data will be deleted from device also. The developer does not have access nor cannot recover any data about the user.</p>"},{"location":"privacy/#use-of-third-party-libraries","title":"Use of Third Party Libraries","text":"<p>App may use third party libraries for purposes of implementing specific features needed by the app to function as intended. This privacy policy does not cover third party libraries.</p> <p>Currently, third party libraries are only used during the development phase. No third party code is included in the distributed version of the app.</p> <p>This application does not contain any ads, tracking, or analytics packages.</p>"},{"location":"privacy/#acknowledgement","title":"Acknowledgement","text":"<p>By using the app the user accepts this policy.</p> <p>Last modified: October 25, 2022. \u00a0 (Changelog) </p>"},{"location":"start/","title":"Getting started","text":"<p>Building this application from source requires Node.js and some web IDE.</p> <p>First clone project and install dependencies:</p> <pre><code>git clone https://github.com/MobileFirstLLC/shortcuts-for-chrome.git\nnpm install\n</code></pre> <p>Run these commands to build a locally debuggable version:</p> <pre><code>npm run build\n</code></pre>"},{"location":"start/#available-commands","title":"Available Commands","text":"<p>This extension is build with extension-cli. Refer to user guide for further details relating to building  the extension.</p> Command Description <code>npm run start</code> development build <code>npm run build</code> production build <code>npm run docs</code> generate docs <code>npm run test</code> run unit tests <code>npm run clean</code> clean generated files <code>npm run coverage</code> unit test coverage report <code>npm run translate</code> generate locales"},{"location":"start/#debugging","title":"Debugging","text":"<ol> <li>Go to <code>chrome://extensions</code></li> <li>Enable developer mode</li> <li>Click <code>load unpacked</code> </li> <li>Navigate to the extension source and choose <code>dist</code> directory</li> </ol>"},{"location":"translate/","title":"Translations","text":"<p>This project is translated to multiple different languages.  The original translations were done automatically, using Google Translate, and therefore may not be great,  but you can improve the quality by manually reviewing and editing. No coding experience is necessary. If you would like to help, go to the project page on POEditor to get started.</p>"},{"location":"translate/#go-to-poeditor","title":"Go to POEditor \u2197","text":""},{"location":"translate/#supported-languages","title":"Supported Languages","text":"<pre><code>\ud83c\uddea\ud83c\uddf9 Amharic             \ud83c\uddf8\ud83c\udde6 Arabic             \ud83c\udde7\ud83c\udde9 Bengali             \ud83c\udde7\ud83c\uddec Bulgarian          \ud83c\udde6\ud83c\udde9 Catalan        \n\n\ud83c\udde8\ud83c\uddf3 Chinese             \ud83c\uddf9\ud83c\uddfc Chinese (TW)       \ud83c\udded\ud83c\uddf7 Croatian            \ud83c\udde8\ud83c\uddff Czech              \ud83c\udde9\ud83c\uddf0 Danish        \n\n\ud83c\uddf3\ud83c\uddf1 Dutch               \ud83c\uddec\ud83c\udde7 English            \ud83c\uddfa\ud83c\uddf8 English (US)        \ud83c\uddea\ud83c\uddea Estonian           \ud83c\uddf5\ud83c\udded Filipino      \n\n\ud83c\uddeb\ud83c\uddee Finnish             \ud83c\uddeb\ud83c\uddf7 French             \ud83c\udde9\ud83c\uddea German              \ud83c\uddec\ud83c\uddf7 Greek              \ud83c\uddee\ud83c\uddf3 Gujarati      \n\n\ud83c\uddee\ud83c\uddf1 Hebrew              \ud83c\uddee\ud83c\uddf3 Hindi              \ud83c\udded\ud83c\uddfa Hungarian           \ud83c\uddee\ud83c\udde9 Indonesian         \ud83c\uddee\ud83c\uddf9 Italian       \n\n\ud83c\uddef\ud83c\uddf5 Japanese            \ud83c\uddee\ud83c\uddf3 Kannada            \ud83c\uddf0\ud83c\uddf7 Korean              \ud83c\uddf1\ud83c\uddfb Latvian            \ud83c\uddf1\ud83c\uddf9 Lithuanian    \n\n\ud83c\uddee\ud83c\udde9 Malay               \ud83c\uddee\ud83c\uddf3 Malayalam          \ud83c\uddee\ud83c\uddf3 Marathi             \ud83c\uddf3\ud83c\uddf4 Norwegian          \ud83c\uddee\ud83c\uddf7 Persian       \n\n\ud83c\uddf5\ud83c\uddf1 Polish              \ud83c\uddf5\ud83c\uddf9 Portuguese         \ud83c\udde7\ud83c\uddf7 Portuguese (BR)     \ud83c\uddf7\ud83c\uddf4 Romanian           \ud83c\uddf7\ud83c\uddfa Russian       \n\n\ud83c\uddf7\ud83c\uddf8 Serbian             \ud83c\uddf8\ud83c\uddf0 Slovak             \ud83c\uddf8\ud83c\uddee Slovenian           \ud83c\uddea\ud83c\uddf8 Spanish            \ud83c\uddf2\ud83c\uddfd Spanish (LA/C)\n\n\ud83c\uddf0\ud83c\uddea Swahili             \ud83c\uddf8\ud83c\uddea Swedish            \ud83c\uddee\ud83c\uddf3 Tamil               \ud83c\uddee\ud83c\uddf3 Telugu             \ud83c\uddf9\ud83c\udded Thai          \n\n\ud83c\uddf9\ud83c\uddf7 Turkish             \ud83c\uddfa\ud83c\udde6 Ukrainian          \ud83c\uddfb\ud83c\uddf3 Vietnamese\n</code></pre>"}]}